{"ast":null,"code":"var _jsxFileName = \"/home/penitent/Documents/udemy/react/code/monster-rolodex/src/App.js\",\n  _s = $RefreshSig$();\nimport Rolodex from './components/Rolodex';\nimport Title from './components/Title';\nimport SearchMenu from './components/SearchMenu';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [nameFilter, setNameFilter] = useState('');\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n  console.log('render');\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => setMonsters(data));\n  }, []);\n  /*\n    useEffect(() => {\n      if(nameFilter === '')\n        setFilteredMonsters(monsters);\n      else{\n        let newMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(nameFilter.toLowerCase()));\n        setFilteredMonsters(newMonsters);\n      }\n    }, [monsters, nameFilter]);*/\n\n  const changeNameFilter = e => {\n    const newFilter = e.target.value;\n    setNameFilter(newFilter);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: 'Monster Rolodex'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchMenu, {\n      name: nameFilter,\n      onNameChange: changeNameFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rolodex, {\n      data: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qhsN4KJpiLcT2oWm9l5XTVhGPLI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Rolodex","Title","SearchMenu","useState","useEffect","jsxDEV","_jsxDEV","App","_s","nameFilter","setNameFilter","monsters","setMonsters","filteredMonsters","setFilteredMonsters","console","log","fetch","then","response","json","data","changeNameFilter","e","newFilter","target","value","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","name","onNameChange","_c","$RefreshReg$"],"sources":["/home/penitent/Documents/udemy/react/code/monster-rolodex/src/App.js"],"sourcesContent":["import Rolodex from './components/Rolodex';\nimport Title from './components/Title';\nimport SearchMenu from './components/SearchMenu';\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [nameFilter, setNameFilter] = useState('');\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n  console.log('render');\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => setMonsters(data));\n\n  }, []);\n/*\n  useEffect(() => {\n    if(nameFilter === '')\n      setFilteredMonsters(monsters);\n    else{\n      let newMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(nameFilter.toLowerCase()));\n      setFilteredMonsters(newMonsters);\n    }\n  }, [monsters, nameFilter]);*/\n\n  const changeNameFilter = (e) => {\n    const newFilter = e.target.value;\n    setNameFilter(newFilter);\n  }\n\n  return (\n    <div className=\"App\">\n      <Title\n        title={'Monster Rolodex'}\n      />\n      <SearchMenu\n        name={nameFilter}\n        onNameChange={changeNameFilter}\n      />\n      <Rolodex\n        data={filteredMonsters}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAACQ,QAAQ,CAAC;EAElEI,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EAErBZ,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIT,WAAW,CAACS,IAAI,CAAC,CAAC;EAElC,CAAC,EAAE,EAAE,CAAC;EACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAChChB,aAAa,CAACc,SAAS,CAAC;EAC1B,CAAC;EAED,oBACElB,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA,CAACL,KAAK;MACJ4B,KAAK,EAAE;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACF3B,OAAA,CAACJ,UAAU;MACTgC,IAAI,EAAEzB,UAAW;MACjB0B,YAAY,EAAEb;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACF3B,OAAA,CAACN,OAAO;MACNqB,IAAI,EAAER;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAzB,EAAA,CA1CKD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA4CT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}