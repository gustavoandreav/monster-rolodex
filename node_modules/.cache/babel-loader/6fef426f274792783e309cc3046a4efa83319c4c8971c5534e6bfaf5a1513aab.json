{"ast":null,"code":"var _jsxFileName = \"/home/penitent/Documents/udemy/react/code/monster-rolodex/src/App.js\",\n  _s = $RefreshSig$();\nimport Rolodex from './components/Rolodex';\nimport Title from './components/Title';\nimport SearchMenu from './components/SearchMenu';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const title = 'Monster Rolodex';\n  const [nameFilter, setNameFilter] = useState('');\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => {\n      setMonsters(data);\n      setFilteredMonsters(data);\n    });\n  }, []);\n  const changeNameFilter = e => {\n    let newFilter = e.target.value;\n    setFilteredMonsters(newFilter);\n    if (newFilter === '') setFilteredMonsters(monsters);else {\n      let newMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(newFilter.toLowerCase()));\n      setFilteredMonsters(newMonsters);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchMenu, {\n      name: nameFilter,\n      onNameChange: changeNameFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rolodex, {\n      data: filteredMonsters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"E0W2XtC5friQMBN1W5hSvCAoiRQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Rolodex","Title","SearchMenu","useState","useEffect","jsxDEV","_jsxDEV","App","_s","title","nameFilter","setNameFilter","monsters","setMonsters","filteredMonsters","setFilteredMonsters","fetch","then","response","json","data","changeNameFilter","e","newFilter","target","value","newMonsters","filter","monster","name","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onNameChange","_c","$RefreshReg$"],"sources":["/home/penitent/Documents/udemy/react/code/monster-rolodex/src/App.js"],"sourcesContent":["import Rolodex from './components/Rolodex';\nimport Title from './components/Title';\nimport SearchMenu from './components/SearchMenu';\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nconst App = () => {\n  const title = 'Monster Rolodex';\n  const [nameFilter, setNameFilter] = useState('');\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState([]);\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => {\n      setMonsters(data);\n      setFilteredMonsters(data);\n    });\n  }, []); \n\n  const changeNameFilter = (e) => {\n    let newFilter = e.target.value;\n    setFilteredMonsters(newFilter);\n    if(newFilter === '')\n      setFilteredMonsters(monsters);\n    else{\n      let newMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(newFilter.toLowerCase()));\n      setFilteredMonsters(newMonsters);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Title\n        title={title}\n      />\n      <SearchMenu\n        name={nameFilter}\n        onNameChange={changeNameFilter}\n      />\n      <Rolodex\n        data={filteredMonsters}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,KAAK,GAAG,iBAAiB;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZP,WAAW,CAACO,IAAI,CAAC;MACjBL,mBAAmB,CAACK,IAAI,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,IAAIC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC9BV,mBAAmB,CAACQ,SAAS,CAAC;IAC9B,IAAGA,SAAS,KAAK,EAAE,EACjBR,mBAAmB,CAACH,QAAQ,CAAC,CAAC,KAC5B;MACF,IAAIc,WAAW,GAAGd,QAAQ,CAACe,MAAM,CAAEC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,SAAS,CAACO,WAAW,CAAC,CAAC,CAAC,CAAC;MAC3Gf,mBAAmB,CAACW,WAAW,CAAC;IAClC;EACF,CAAC;EAED,oBACEpB,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB3B,OAAA,CAACL,KAAK;MACJQ,KAAK,EAAEA;IAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACF/B,OAAA,CAACJ,UAAU;MACT2B,IAAI,EAAEnB,UAAW;MACjB4B,YAAY,EAAEjB;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACF/B,OAAA,CAACN,OAAO;MACNoB,IAAI,EAAEN;IAAiB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAA7B,EAAA,CAxCKD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA0CT,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}