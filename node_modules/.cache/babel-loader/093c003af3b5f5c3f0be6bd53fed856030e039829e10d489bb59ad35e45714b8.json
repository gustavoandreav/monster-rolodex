{"ast":null,"code":"var _jsxFileName = \"/home/penitent/Documents/udemy/react/code/monster-rolodex/src/App.js\";\nimport Rolodex from './components/Rolodex';\nimport Title from './components/Title';\nimport SearchMenu from './components/SearchMenu';\nimport './App.css';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.changeNameFilter = e => {\n      const {\n        monsters\n      } = this.state;\n      let newFilter = e.target.value;\n      this.setState({\n        nameFilter: newFilter\n      });\n      if (newFilter === '') this.setState({\n        filteredMonsters: monsters\n      });else {\n        let newMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(newFilter.toLowerCase()));\n        this.setState({\n          filteredMonsters: newMonsters\n        });\n      }\n    };\n    this.state = {\n      nameFilter: '',\n      monsters: [],\n      filteredMonsters: []\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => this.setState({\n      monsters: data,\n      filteredMonsters: data\n    }));\n    console.log('bring data');\n  }\n  render() {\n    const {\n      nameFilter,\n      filteredMonsters\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchMenu, {\n        name: nameFilter,\n        onNameChange: this.changeNameFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rolodex, {\n        data: filteredMonsters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Rolodex","Title","SearchMenu","React","Component","jsxDEV","_jsxDEV","App","constructor","props","changeNameFilter","e","monsters","state","newFilter","target","value","setState","nameFilter","filteredMonsters","newMonsters","filter","monster","name","toLowerCase","includes","componentDidMount","fetch","then","response","json","data","console","log","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onNameChange"],"sources":["/home/penitent/Documents/udemy/react/code/monster-rolodex/src/App.js"],"sourcesContent":["import Rolodex from './components/Rolodex';\nimport Title from './components/Title';\nimport SearchMenu from './components/SearchMenu';\nimport './App.css';\nimport React, { Component } from 'react';\n\nclass App extends Component{\n  constructor(props) {\n      super(props);\n      this.state = {\n        nameFilter: '',\n        monsters: [],\n        filteredMonsters: [],\n      }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => this.setState({ monsters: data, filteredMonsters: data})); \n    console.log('bring data');\n  }\n\n  changeNameFilter = (e) => {\n    const { monsters } = this.state;\n    let newFilter = e.target.value;\n    this.setState({nameFilter: newFilter});\n    if(newFilter === '')\n      this.setState({filteredMonsters:monsters});\n    else{\n      let newMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(newFilter.toLowerCase()));\n      this.setState({filteredMonsters:newMonsters});\n    }\n  }\n\n  render() {\n    const { nameFilter, filteredMonsters } = this.state;\n    console.log(this.state);\n    return (\n      <div className=\"App\">\n        <Title />\n        <SearchMenu\n          name={nameFilter}\n          onNameChange={this.changeNameFilter}\n        />\n        <Rolodex\n          data={filteredMonsters}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,SAASH,SAAS;EACzBI,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAejBC,gBAAgB,GAAIC,CAAC,IAAK;MACxB,MAAM;QAAEC;MAAS,CAAC,GAAG,IAAI,CAACC,KAAK;MAC/B,IAAIC,SAAS,GAAGH,CAAC,CAACI,MAAM,CAACC,KAAK;MAC9B,IAAI,CAACC,QAAQ,CAAC;QAACC,UAAU,EAAEJ;MAAS,CAAC,CAAC;MACtC,IAAGA,SAAS,KAAK,EAAE,EACjB,IAAI,CAACG,QAAQ,CAAC;QAACE,gBAAgB,EAACP;MAAQ,CAAC,CAAC,CAAC,KACzC;QACF,IAAIQ,WAAW,GAAGR,QAAQ,CAACS,MAAM,CAAEC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACX,SAAS,CAACU,WAAW,CAAC,CAAC,CAAC,CAAC;QAC3G,IAAI,CAACP,QAAQ,CAAC;UAACE,gBAAgB,EAACC;QAAW,CAAC,CAAC;MAC/C;IACF,CAAC;IAxBG,IAAI,CAACP,KAAK,GAAG;MACXK,UAAU,EAAE,EAAE;MACdN,QAAQ,EAAE,EAAE;MACZO,gBAAgB,EAAE;IACpB,CAAC;EACL;EAEAO,iBAAiBA,CAAA,EAAG;IAClBC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI,IAAI,CAACd,QAAQ,CAAC;MAAEL,QAAQ,EAAEmB,IAAI;MAAEZ,gBAAgB,EAAEY;IAAI,CAAC,CAAC,CAAC;IACvEC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;EAC3B;EAcAC,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEhB,UAAU;MAAEC;IAAiB,CAAC,GAAG,IAAI,CAACN,KAAK;IACnDmB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACpB,KAAK,CAAC;IACvB,oBACEP,OAAA;MAAK6B,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClB9B,OAAA,CAACL,KAAK;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTlC,OAAA,CAACJ,UAAU;QACTqB,IAAI,EAAEL,UAAW;QACjBuB,YAAY,EAAE,IAAI,CAAC/B;MAAiB;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFlC,OAAA,CAACN,OAAO;QACN+B,IAAI,EAAEZ;MAAiB;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAejC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}